#Rule 1: DO use plural nouns for collections

# GOOD
GET /products              # get all the products
GET /products/{product_id} # get one product

# BAD
GET /product/{product_id}


#Rule 2: Rule #2: DON'T add unnecessary path segments

# GOOD
GET /v3/application/listings/{listing_id}

# BAD
PATCH /v3/application/shops/{shop_id}/listings/{listing_id}
GET /v3/application/shops/{shop_id}/listings/{listing_id}/properties
PUT /v3/application/shops/{shop_id}/listings/{listing_id}/properties/{property_id}

GET /shops/{shop_id}/listings              # normal, expected
GET /shops/{shop_id}/listings/{listing_id} # someone trying to be "consistent"?
GET /listings/{listing_id}                 # a much better endpoint

#Rule #3: DON'T add .json or other extensions to the url

#Rule #4: DON'T return arrays as top level responses

# GOOD
GET /things returns:
{ "data": [{ ...thing1...}, { ...thing2...}] }

# BAD
GET /things returns:
[{ ...thing1...}, { ...thing2...}]

#Rule #6: DO use strings for all identifiers

# BAD
{ "id": 123 }

# GOOD
{ "id": "123" }



///
500 - server error


req.query = when the data is short or you want to search something.
req.params = when we want to pass the id to apply changes.
req.body = when you have large amount of data.You can pass to body.